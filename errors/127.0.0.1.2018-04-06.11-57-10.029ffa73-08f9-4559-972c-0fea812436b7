(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> cannot concatenate 'str' and 'float' objects"
p3
sS'layer'
p4
S'C:\\projects\\web2py\\applications\\bootcamp_template\\controllers/default.py'
p5
sS'code'
p6
S'import pandas as pd\nimport os\ndef index():\n    #get_data()\n    return dict()\n\n\ndef get_data():\n    \n    df = pd.read_csv(os.path.join(request.folder, \'private\', \'data/dataset_1/Video_Games_Sales_as_at_22_Dec_2016.csv\'));\n\n    master = createDataRow(df)\n\n    output = \'{"master":\'+master\n\n    genres = df[\'Genre\'].unique()\n\n    for g in genres:\n        output+=\',"\'+g+\'":\'+createDataRow(df[df[\'Genre\']==g])\n\n    output+="}"\n    print output\n    return output\n\n    # output = {}\n    # output[\'eu\'] = df[\'EU_Sales\'].mean()\n    # output[\'jp\'] = df[\'JP_Sales\'].mean()\n    # output[\'na\'] = df[\'NA_Sales\'].mean()\n    # output[\'o\'] = df[\'Other_Sales\'].mean()\n    # output[\'g\'] = df[\'Global_Sales\'].mean()\n\n    # print output\n\n    # jsontring = \'{\'\n    # ndx = 0\n    # for o in output:\n    #     if ndx > 0:\n    #         jsontring+=\',\'\n    #     jsontring+=\'"\'+o+\'":\'+str(output[o])\n    #     ndx+=1\n    # #print \'hello\'\n    # jsontring+=\'}\'\n    # return jsontring\n\n\ndef createDataRow(df):\n    output = {}\n    output[\'eu\'] = df[\'EU_Sales\'].mean()\n    output[\'jp\'] = df[\'JP_Sales\'].mean()\n    output[\'na\'] = df[\'NA_Sales\'].mean()\n    output[\'o\'] = df[\'Other_Sales\'].mean()\n    output[\'g\'] = df[\'Global_Sales\'].mean()\n\n    #print output\n\n    jsontring = \'{\'\n    ndx = 0\n    for o in output:\n        if ndx > 0:\n            jsontring+=\',\'\n        jsontring+=\'"\'+o+\'":\'+str(output[o])\n        ndx+=1\n    #print \'hello\'\n    jsontring+=\'}\'\n    return jsontring\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/bulk_register\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    also notice there is http://..../[app]/appadmin/manage/auth to allow administrator to manage users\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n\nresponse._vars=response._caller(get_data)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "C:\\projects\\web2py\\gluon\\restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "C:\\projects\\web2py\\applications\\bootcamp_template\\controllers/default.py", line 106, in <module>\n  File "C:\\projects\\web2py\\gluon\\globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "C:\\projects\\web2py\\applications\\bootcamp_template\\controllers/default.py", line 19, in get_data\n    output+=\',"\'+g+\'":\'+createDataRow(df[df[\'Genre\']==g])\nTypeError: cannot concatenate \'str\' and \'float\' objects\n'
p11
s.